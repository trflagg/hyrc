type Query {
  hello: String
  messageList: [Message]!
  character: Character!
}

enum Gender {
  MALE
  FEMALE
}

type Character {
  id: String!
  firstName: String
  lastName: String
  gender: Gender
  lastResult: String
  commands: [Command]
}

type Command {
  text: String
  unread: Boolean
}

type Message {
  id: String!
  name: String!
  text: String
}

type MessageId {
  id: String!
}

input MessageInput {
  id: String
  name: String!
  text: String!
}

input CharacterInput {
  id: String!
  firstName: String
  lastName: String
  gender: String
}

type Mutation {
  createMessage: MessageId!
  updateMessage(message: MessageInput!): Message!
  deleteMessage(message: MessageInput!): Message!
  updateCharacter(character: CharacterInput!): Character!
  restartGame(character: CharacterInput!): Character!
  runMessage(character: CharacterInput!, message: String): Character!
}
